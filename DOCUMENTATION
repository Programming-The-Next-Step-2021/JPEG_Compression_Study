Hello and welcome to the documentation file of my Python package JPEG_Compression_Study.
The goal of this package is to provide the user with an interface for a psycho/physiological experiment about visual perception. 
I will shortly describe the goal of the experiment itself and how the experimental design looks like to reach that goal. Afterwards, I will describe how to use the different files in this packages and how they are connected and I will provide you with all the necessary information you need, to use this package properly.

THE EXPERIMENT
In this experiment, we will examine how accurate human visual perception can be, by testing participants reactions to different images. While people can definitely judge, whether something they see in a photograph is subjectively beautiful or not, we want to test if people can acutally perceive the objective quality of the image itself - represented by the resolution.
We will show participants two pictures, which apparently show the exact same motive. But while one of them will contain its original quality, the other one will have a lower resolution and therefore inferior quality.
The task for the participant is, to recognize, which of the pictures is the one with the lower resolution. This is much harder than you think. Trust me, I tried it myself multiple times.
The level of compression varies between the different trials - some of the pictures will be displayed in only 10% quality of the original, while other pictures will be displayed in up to 90% of the original resolution.
Participants can make their choices by pressing one of two buttons and we will measure their reaction time and if they gave the correct response in every trial. The expectation is, that the lower the resolution of the picture, the lower the error rate will be and the faster the reaction. 
With this experimental framework, it´s easy to examine the construct of visual perception and the task itself won´t take longer than 5 to 10 minutes. If you want to expand the duration of the experiment, the code makes it very easy for every researcher to ft it to his personal needs.

THE DIFFERENT FILES
The package contains multiple different files, that are all interconnected. In the following part, I will explain what each file contains and how you can use it.

Stock_file_library.py
This is a very simple file. But still very important! It contains a beautiful selection of 10 different stockphoto images of various landscapes. All those files are stored in a list, that the other documents in this package then can access. And Boy, they do!

Compression_code.py
This file is dedicated to perform the JPEG compression, which is so desperately needed to make this experiment happen. All the beautiful landscapes in the Stock_files_library undergo a procedure in which they get randomly selected and compressed into different resolutions - if they want to or not!
Both full_sized images and their compressed alter-egos are then stored in two different lists with 50 items each. This is the exact number of trials that the experiment will contain. Coincidence? I guess not!
Every participant will be presented with a different sets of pictures in different combinations. This increases the replay-value of the experiment massively. 

Code_experimental_design.py
This is the main file of the entire experiment. In this file, you have the code for all trials of the experiment. You can find detailed discriptions of every single aspect of the code in the python file itself. But here´s how it generally works:
The Code_experimental_design implements the psychopy package to initialize a handy framework for behavioral experiments. Running the file will open a dialogue window where each participant has to enter some an anonymized code so that you can distinguish between the data of different participants.
The participant chan choose to abort the experiment by pressing cancel, but we highly recommend to instead start it and enjoy.
Afterwards, the programme will switch into fullscreen mode and give some basic instructions about the upcoming task. Participants are encouraged to read and remember it, but don´t worry: The instructions will continuously be displayed during the trials.
You can continue through the first few instruction pages by pressing the space button. But then it´s getting serious:
For 50 trials, participants will see two beautiful pictures and have to decide, which one of those is in a lower resolution. They can confirm their choice by either pressing the "f" button on their keyboard, to select the left picture or by pressing the "j" button to select the right picture.
After the key press, the next trial will start immediately. If participants are feeling lazy however, they can quit the experiment anytime by pressing the "q" button. But please don´t do that! You´d be missing out on a lot.
After 50 trials, the experiment ends and the data will be saved in an excel file (see Experimental_data.xlsx).

Experimental_data.xlsx
This is an automatically generated data-file that stores all the valuable information that is collected during the experiment. It is an excel spreadsheet with the following columns:
Reaction time (RT): In this column, you can see the reaction time for each experimental trial.
Correct images: In this column, the name of every single "correct" picture - remember: The one with the lower resolution - will be stored. This way you can always check whether there are some motives that were just harder to recognize than others.
Correct responses: In this column, for every trial the correct response will be stored in form of the letter that stands for the corresponding key.
Given response: In this column you can see, which response the participant actually gave in every trial. This makes it easy to compare the Correct- with the given response, to see how much skill the corresponding participant posessed. Or how hard he screwed up.
Resolution: Finally, in this column the resolution of each picture is stored in the form of the quality-percentage of the original picture. The higher the number, the harder it was for the participant.

Stock_images (Folder)
In this folder, the 10 landscape pictures are stored in their full, undistorted quality. You can always add more pictures to spice things up.

Images (folder)
This folder will look different for each participant. It stores the 50 full-sized pictures that were displayed for this particular participant, as well as the 50 compressed images. A full_image with a certain number always corresponds to a compressed_image with the same number.

Setup.py
This file contains the setup for the package, including package name, creator, contact adress and required version. Not much to see here.

_init_.py
This is the initialization file for the package

unit_test.py
This file was created to display different tests to see whether the experiment works or not. Feel free to add anything :D

README.md
The classical README file. If you made it to the end of this document, you probably won´t find any additional information there. But you can still read it of course.

LICENSE
This one contains the MIT license for usage and distribution of this package.



